name: Test cdxgen python

on:
  workflow_dispatch:
    inputs:
      repo:
        description: 'repo to clone'
        required: true
        type: string
      run_name:
        description: 'display name for run'
        required: true
        type: string

run-name: ${{ inputs.run_name }}
        
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Get cdxgen
        run: |
          git clone https://github.com/CycloneDX/cdxgen.git
          cd cdxgen
          git checkout feature/deno-docker
          npm pack
          npm install cyclonedx-cdxgen-9.1.0.tgz -g
      
      - name: Test sample repo
        run: |
          git clone ${{ inputs.repo }} testrepo
          mkdir artifacts
          cd testrepo
          cdxgen -p -t python -o ../artifacts/novenvbom.json
      
      - name: Test sample repo within venv
        run: |
          cd testrepo
          python -m venv ./venv
          cd venv/bin
          source activate
          cd ../..
          cdxgen -p -t python -o ../artifacts/venvnopkgbom.json
          pip install -r requirements.txt
          pip freeze >> ../artifacts/pipfreeze.txt
          pip freeze
          cdxgen -p -t python -o ../artifacts/venvpkgbom.json
          
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.1.2
        with:
          name: ${{ inputs.run_name }}-artifacts
          path: |
            artifacts
