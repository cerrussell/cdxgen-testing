name: Test cdxgen python

on:
  workflow_dispatch:
    inputs:
      repo:
        description: 'repo to clone'
        required: true
        type: string
      run_name:
        description: 'display name for run'
        required: true
        type: string

run-name: ${{ inputs.run_name }}
        
jobs: 
  build:
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Setup Python
        uses: actions/setup-python@v3.1.4
        with:
          python-version: 3.11
      
      - name: Setup Java JDK
        uses: actions/setup-java@v1.4.4
        with:
          java-version: 17
          java-package: jre
   
      - name: Get cdxgen
        env:
          CDXGEN_DEBUG_MODE: debug
        run: |
          git clone https://github.com/CycloneDX/cdxgen.git
          cd cdxgen
          git checkout feature/deno-docker
          npm pack
          npm install cyclonedx-cdxgen-9.1.0.tgz -g
      
      - name: Test sample repo no venv
        env:
          CDXGEN_DEBUG_MODE: debug
        run: |
          git clone ${{ inputs.repo }} testrepo
          mkdir artifacts
          cd testrepo
          cdxgen -p -t python -o ../artifacts/novenvbom.json
      
      - name: Test sample repo within venv - Linux
        if: matrix.os == 'ubuntu-latest'
        env:
          CDXGEN_DEBUG_MODE: debug
        run: |
          cd testrepo
          python -m venv ./venv
          cd venv/bin
          source activate
          cd ../..
          cdxgen -p -t python -o ../artifacts/${{ inputs.run_name }}-venvnopkgbom-${{ matrix.os }}.json
          pip install -r requirements.txt
          pip freeze >> ../artifacts/${{ inputs.run_name }}-pipfreeze-${{ matrix.os }}.txt
          pip freeze
          cdxgen -p -t python -o ../artifacts/${{ inputs.run_name }}-venvpkgbom-${{ matrix.os }}.json
      
      - name: Test sample repo within venv - Windows
        if: matrix.os == 'windows-latest'
        env:
          CDXGEN_DEBUG_MODE: debug
        run: |
          cd testrepo
          python -m venv ./venv
          cd venv/Scripts
          ./activate
          cd ../..
          cdxgen -p -t python -o ../artifacts/${{ inputs.run_name }}-venvnopkgbom-${{ matrix.os }}.json
          pip install -r requirements.txt
          pip freeze >> ../artifacts/${{ inputs.run_name }}-pipfreeze-${{ matrix.os }}.txt
          pip freeze
          cdxgen -p -t python -o ../artifacts/${{ inputs.run_name }}-venvpkgbom-${{ matrix.os }}.json
          
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.1.2
        with:
          name: ${{ inputs.run_name }}-artifacts-${{ matrix.os }}
          path: |
            artifacts
